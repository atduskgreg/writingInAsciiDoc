[[use-orm-svn]]
== Using the ORM SVN repo

O'Reilly's production department uses Subversion to manage all files.

== Integrating with the ORM production workflow
To actually "publish" your document through O'Reilly, you'll need to get your files out of git and into the ORM production workflow, which is based on Subversion.  (You'll also need an account for this, so talk to your editor about the process.)  You can find all the documentation about this process in the https://prod.oreilly.com/external/tools/docbook/docs/authoring/docbookguidelines_web.pdf[O'Reilly Production Guidelines].

Checking out the files looks something like this:

----
svn checkout --username "odewahn@oreilly.com" "https://prod.oreilly.com/internal/books/sandbox_odewahn_RT79726/current/"
----


[CAUTION]
.Using "git svn"
=================
In theory, we should be able have git act like an svn client using "git svn" by doing something like this (see Chapter 8 from _Pro Git_):

----
git svn clone --username "odewahn@oreilly.com" "https://prod.oreilly.com/internal/books/sandbox_odewahn_RT79726/current/" -T trunk -b branches -t tags
----
I don't think this is going to work for us.  The main sticking point seems to be that git wants to make a complete history of all the changes that have happened on the repository, so it goes through several hundred thousand (literally!) different revisions.   

This takes a long time to complete -- it has to go through almost 300K revisions.  

I wonder if there is a way to speed it up?  Maybe we could create a separate repository for just realtime projects, because this is really slow.  Tracking changes should be done in the git repo, and the subversion repo is only for publishing content, so it shouldn't be very important.
=================

==  Generating a PDF 

You can generate a fresh PDF of your book every time you commit changes to the SVN
repository. To do so, run the following command (substituting your own message
before the semicolon):

----
$ svn commit -m'Made some really important changes to Chapter 3; orm:commitpdf'
----

To get the PDF, just run svn up on your working copy about 5–10 minutes after committing your files. The PDF will be downloaded as pdf/book.xml.pdf in your working copy. If there are any problems in generating the PDF, you’ll instead get a .buildlog file in the pdf/ directory that lists the errors



== Getting started writing in AsciiDoc
http://www.methods.co.nz/asciidoc/index.html[AsciiDoc] is a text document format for writing notes, documentation, articles, books, ebooks, slideshows, web pages, man pages and blogs. The main advantage of AsciiDoc is that it plays well with DocBook, but is a format that people might actually be able to write in.  The format is very similar to wiki markup.  This http://powerman.name/doc/asciidoc[Asciidoc cheat sheet]  covers about 90% of what you need to know on a day to day basis.  

The best way to get a feel for how O'Reilly uses AsciiDoc is to use Subversion to grab the R&D repository.  This repo shows how to create an O'Reilly style book using AsciiDoc.  You can grab it from our Subversion repository (assuming you have an account) using the following command:

----
svn checkout --username "odewahn@oreilly.com" "https://prod.oreilly.com/internal/books/sandbox_odewahn_RT79726/current/tools/cookbook_demo.pdf"
----

I've also placed relevant files into the "samples" directory in this repository.  

== Edit some file

You can open all the files in a directory using the command:

----
mate .
----

That will open the editor and also display the _project drawer_, which is a navigation tree that you can use to move around between files.  <<textmate-fig>> shows an example.  Note how the various AsciiDoc elements are all nicely color coded thanks to the asciidoc bundle we installed earlier.


[[textmate-fig]]
.Use TextMate's bundle editor to add in the path
image::figs/textmate_editor.png[width="600px"]


[CAUTION]
.Locating the asciidoc command within the bundle
================================================
On my system, there was a weird problem when the bundle editors tried to find the asciidoc command.  There's probably some environment variable or the other that I need to set, but here's what I did to fix it.  First, I located where MacPorts installed asciidoc, which you can do by dropping into a terminal and typing this:

----
$ which asciidoc

/opt/local/bin/asciidoc
----

Then go into the bundle editor (Bundles -> Bundle Editor -> Show Bundle Editor) and select the asciidoc bundle.  You can then go into the commands (the have "c" in fromt of them) and add this path in front of everyplace where asciidoc appears.  For example, here's the revised version of the "Preview" command:

----
if [[ -z $TM_FILENAME ]]
  then doc="-"
  else doc="$TM_FILEPATH"
fi
/opt/local/bin/asciidoc --attribute=imagesdir="file://$(pwd)" --out-file - "$doc" 2>&1 | perl -pe 's%(\w+): .*?: line ([0-9]+):%<b style="color:red">$1</b>: <a href="txmt://open/?line=$2">line $2</a>:%g'
----

It should look something like <<bundle-editor-fig>> in Textmate.

[[bundle-editor-fig]]
.Use TextMate's bundle editor to add in the path
image::figs/bundle_editor.png[width="600px"]

================================================



If you’ve ever tried to send someone an HTML document that includes stylesheets and images you’ll know that it’s not as straight-forward as exchanging a single file. AsciiDoc has options to create stand-alone documents containing embedded images, stylesheets and scripts. The following AsciiDoc command creates a single file containing embedded images, CSS stylesheets, and JavaScript (for table of contents and footnotes):

----
$ asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt
----

You can view the HTML file here: http://www.methods.co.nz/asciidoc/article-standalone.html




== Overview

This doc describes how to set up an environment to write for Maker Press.  (Or, I should say, it's my running notes for it!)

== Setting up your environment

Depending on your system, you might have a bit of work to do to get things up and going.  So, take this section with a grain of salt!

=== Preliminaries
You will need the XCode development tools and X11 (which comes on some Macs).  Next, you'll need MacPorts, which makes it much easier to install everything you'll need.  You can find it here:

http://www.macports.org/install.php[MacPorts]

[[NOTE]]
----
One annoyance I had on MacPorts is that it lists the OS versions by name, rather than number, which I found annoying.  You can find your OS version by clicking the Apple at the top left corner and then selecting "About this Mac" and then find the corresponding name using the list below (from Wikipedia):

* Version 10.0: "Cheetah"
* Version 10.1: "Puma"
* Version 10.2: "Jaguar"
* Version 10.3: "Panther"
* Version 10.4: "Tiger"
* Version 10.5: "Leopard"
* Version 10.6: "Snow Leopard"
* Version 10.7: "Lion"
----

Then make sure your PATH is correct in ~/.profile. So here are the two lines you'll want (updating for your username):

----
PATH=$PATH:/opt/local/bin:/opt/local/sbin:/Applications:/Applications/Utilities:/usr/local/bin:/Users/adam/bin
export PATH
----


== Git

If this is not installed, you can use  MacPorts install. In the Terminal:

----
$ sudo port install git
----

=== asciidoc, a2x (8.6.4)
Install asciidoc like this:

----
$sudo port install asciidoc
----

This step takes a very long time.

Once that is done, you can follow the the AsciiDoc instructions. I just went ahead and installed it according to the "Running asciidoc from your local copy" instructions and didn't bother with the global install.

== Useful links


https://prod.oreilly.com/external/tools/docbook/docs/authoring/docbookguidelines_web.pdf



== Pulling the Asciidoc example files
This command will pull down the sample AsciiDoc files from tools:

----
svn checkout --username "odewahn@oreilly.com" "https://prod.oreilly.com/external/tools/docbook/prod/trunk/samples/r_and_d/asciidoc/"
----


This pretty much has examples of how to do everything.

== Create a new git repository from the SVN repo

You'll need to first create a git repository from our existing repo.  You can do this using git svn (see Chapter 8 from _Pro Git_).  For example:

----
git svn clone --username "odewahn@oreilly.com" "https://prod.oreilly.com/internal/books/sandbox_odewahn_RT79726/current/" -T trunk -b branches -t tags
----


[NOTE]
====
This takes a long time to complete -- it has to go through almost 300K revisions.  

 I wonder if there is a way to speed it up?  Maybe we could create a separate repository for just realtime projects, because this is really slow.  Tracking changes should be done in the git repo, and the subversion repo is only for publishing content, so it shouldn't be very important.
====

In theory, you can now do everything in git, but I'm not quite ready to believe that yet!  If you just want to checkout the repository directly from Subversion, you can use this:

----
svn checkout --username "odewahn@oreilly.com" "https://prod.oreilly.com/internal/books/sandbox_odewahn_RT79726/current/"
----



==  Generating the PDF 

T


$ svn commit -m'Made some really important changes to Chapter 3; orm:commitpdf'


To get the PDF, just run svn up on your working copy about 5–10 minutes after committing your files. The PDF will be downloaded as pdf/book.xml.pdf in your working copy. If there are any problems in generating the PDF, you’ll instead get a .buildlog file in the pdf/ directory that lists the errors


